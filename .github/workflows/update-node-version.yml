name: Update Node.js Version

on:
  schedule:
    - cron: "0 6 * * SAT" # Run every Saturday at 6 AM UTC
  workflow_dispatch:

jobs:
  setup:
    uses: ./.github/workflows/setup-and-test.yml
  update-node-version:
    needs: setup
    runs-on: ubuntu-latest
    name: Update Node.js Version
    timeout-minutes: 10

    steps:
      - name: Get current Node.js version from .nvmrc
        id: current-version
        run: |
          CURRENT_VERSION=$(cat .nvmrc)
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Get latest LTS Node.js version
        id: latest-version
        run: |
          LATEST_LTS=$(curl -s https://nodejs.org/dist/index.json | jq -r '.[] | select(.lts != false) | .version' | head -1 | sed 's/v//')
          echo "latest=$LATEST_LTS" >> $GITHUB_OUTPUT

      - name: Check if update is needed
        id: check-update
        run: |
          CURRENT="${{ steps.current-version.outputs.current }}"
          LATEST="${{ steps.latest-version.outputs.latest }}"

          if [ "$CURRENT" != "$LATEST" ]; then
            echo "update_needed=true" >> $GITHUB_OUTPUT
            echo "Update needed: $CURRENT -> $LATEST"
          else
            echo "update_needed=false" >> $GITHUB_OUTPUT
            echo "Node.js version is already up to date: $CURRENT"
          fi

      - name: Update .nvmrc file
        if: steps.check-update.outputs.update_needed == 'true'
        run: |
          echo "${{ steps.latest-version.outputs.latest }}" > .nvmrc
          echo "Updated .nvmrc to version ${{ steps.latest-version.outputs.latest }}"

      - name: Update package.json engines field
        if: steps.check-update.outputs.update_needed == 'true'
        run: |
          # Update the engines field to use the new version
          NEW_VERSION="${{ steps.latest-version.outputs.latest }}"
          # Extract major version for engines field
          MAJOR_VERSION=$(echo $NEW_VERSION | cut -d. -f1)
          # Update package.json
          jq --arg version ">=$MAJOR_VERSION.0.0" '.engines.node = $version' package.json > package.json.tmp && mv package.json.tmp package.json
          echo "Updated package.json engines to >=$MAJOR_VERSION.0.0"

      - name: Create Pull Request
        if: steps.check-update.outputs.update_needed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update Node.js to ${{ steps.latest-version.outputs.latest }}"
          title: "chore: update Node.js to ${{ steps.latest-version.outputs.latest }}"
          body: |
            This PR updates Node.js from version `${{ steps.current-version.outputs.current }}` to the latest LTS version `${{ steps.latest-version.outputs.latest }}`.

            This update was automatically generated by the Update Node.js Version workflow.
          branch: update-node-version-${{ steps.latest-version.outputs.latest }}
          delete-branch: true
