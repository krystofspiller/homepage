---
import Image from "@components/Image.astro"

import PureGrinding from "@assets/images/pure-grinding.avif"
import CatEars from "@assets/icons/cat-ears.astro"
import Duolingo from "@assets/icons/duolingo.svg"
import Via from "@assets/icons/via.astro"
import Electron from "@assets/icons/electron.svg"
import React from "@assets/icons/react.svg"
import Docker from "@assets/icons/docker.svg"
import Dtu from "@assets/icons/dtu.svg"
import Piano from "@assets/icons/piano.astro"
import oiia from "@assets/images/oiia.gif"

import oiiaMp3 from "@public/audio/oiia.mp3"
import oiiaOpus from "@public/audio/oiia.opus"

import { YOUTUBE_VIDEO_ID_DEFAULT } from "@utils/constants"

import Heading from "./Heading.astro"
import Link from "./Link.astro"
import TooltipInline from "./TooltipInline.astro"

import { env } from "env"
import { z } from "zod"

let showDuolingo = true

const duolingoSchema = z.object({
  streak: z.number(),
})

const getDuolingoStreak = async (): Promise<number> => {
  try {
    const response = await fetch(
      "https://www.duolingo.com/2017-06-30/users/1102654541",
    )
    if (!response.ok) {
      showDuolingo = false
    }

    const json = await response.json()
    const { streak } = duolingoSchema.parse(json)
    return streak
  } catch {
    showDuolingo = false
  }

  return 0
}

let showYouTube = true
const getLatestYouTubeVideo = async (): Promise<string> => {
  try {
    const youtubeVideosUrl = `https://www.googleapis.com/youtube/v3/playlistItems?part=contentDetails&maxResults=50&playlistId=PL7-fKc8SwbfOk3eZyIk_sbKjR7YMO6lfW&key=${env.YOUTUBE_API_KEY}`
    const response = await fetch(youtubeVideosUrl)
    if (!response.ok) {
      showYouTube = false
    }

    const json = await response.json()
    let acc: [string, number] = ["id", 0]
    for (const item of json.items) {
      const date = Date.parse(item.contentDetails.videoPublishedAt)
      if (date > acc[1]) {
        acc = [item.contentDetails.videoId, date]
      }
    }

    return acc[0]
  } catch {
    showYouTube = false
  }

  return YOUTUBE_VIDEO_ID_DEFAULT
}

const [duolingoStreak, youTubeVideoId] = await Promise.all([
  getDuolingoStreak(),
  getLatestYouTubeVideo(),
])
---

<section class="my-10 mb-6">
  <Heading id="general" data-toc="Education" data-as="h2">
    Edu<span
      id="cat-ears"
      class="relative cursor-pointer hover:text-[#75FB4C] hover:[&_path]:fill-[#75FB4C] hover:[&_path]:stroke-[#75FB4C]"
      ><CatEars className="absolute -top-[5px] left-0 w-9" />cat</span
    >ion
  </Heading>
  <div class="mb-3 flex items-center gap-2">
    <div><Image class="h-10 w-auto" src={Dtu} alt="Dtu logo" /></div>
    <div class="flex grow flex-col">
      <div
        class="flex flex-col items-start justify-start sm:flex-row sm:items-center sm:justify-between"
      >
        <span class="text-lg">Technical University of Denmark</span>
        <span class="text-sm text-zinc-400">Copenhagen, Denmark</span>
      </div>
      <div
        class="flex flex-col items-start justify-start sm:flex-row sm:items-center sm:justify-between"
      >
        <span class="flex items-center text-sm sm:text-base"
          >Master of Computer Science and Engineering</span
        >
        <span class="text-xs text-zinc-400 sm:text-sm">2020-2022</span>
      </div>
    </div>
  </div>
  <span class="text-base leading-8 text-zinc-400"
    ><Link href="https://krystofspiller.github.io/cv/assets/Master%20thesis.pdf"
      >Thesis: Aiding Informed Critical Thinking</Link
    ></span
  >

  <div class="my-6"></div>

  <div class="mb-3 flex items-center gap-2">
    <div><Via size="h-auto w-10 sm:w-8" /></div>
    <div class="flex grow flex-col">
      <div
        class="flex flex-col items-start justify-start sm:flex-row sm:items-center sm:justify-between"
      >
        <span class="text-base sm:text-lg">VIA University College</span>
        <span class="text-sm text-zinc-400">Horsens, Denmark</span>
      </div>
      <div
        class="flex flex-col items-start justify-start sm:flex-row sm:items-center sm:justify-between"
      >
        <span class="flex items-center text-sm sm:text-base"
          >Bachelor of ICT Engineering</span
        >
        <span class="text-xs text-zinc-400 sm:text-sm">2016-2020</span>
      </div>
    </div>
  </div>
  <div class="mb-6 flex items-center justify-between">
    <div class="text-base leading-8 text-zinc-400">
      <Link
        href="https://krystofspiller.github.io/cv/assets/Bachelor%20project.pdf"
        >Final project: Cloud computing for end users</Link
      > - <Link
        href="https://krystofspiller.github.io/cv/assets/Bachelor%20project%20demo.mp4"
        >Demo</Link
      >&nbsp;
    </div>
    <div class="flex w-fit items-center gap-3 p-2">
      <TooltipInline>
        <Image
          slot="trigger"
          class="h-6 w-auto"
          src={Electron}
          alt="Electron logo"
        />
        <Link slot="content" href="https://www.electronjs.org">Electron</Link>
      </TooltipInline>
      <TooltipInline>
        <Image slot="trigger" class="h-6 w-auto" src={React} alt="React logo" />
        <Link slot="content" href="https://react.dev">React</Link>
      </TooltipInline>
      <TooltipInline>
        <Image
          slot="trigger"
          class="h-6 w-auto"
          src={Docker}
          alt="Docker logo"
        />
        <Link slot="content" href="https://www.docker.com">Docker</Link>
      </TooltipInline>
    </div>
  </div>

  <Heading data-as="h2" data-toc="Pure grinding" id="pure-grinding">
    <a href="https://www.youtube.com/watch?v=hzdIoghbFzg" target="_blank"
      ><Image
        class="mb-2 h-6 w-auto [*_path]:fill-zinc-400"
        src={PureGrinding}
        alt="Pure grinding"
      /></a
    >
  </Heading>

  <div class="mt-2 flex items-center gap-2">
    {
      showDuolingo && (
        <div class="relative w-12">
          <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-3/4 text-sm text-black">
            {duolingoStreak}
          </div>
          <Image class="h-12 w-auto" src={Duolingo} alt="Duolingo logo" />
        </div>
      )
    }
    <div class="w-full">
      <div class="text-lg text-zinc-400">
        Current Duolingo streak in Korean ðŸ‡°ðŸ‡· and chess.
      </div>
    </div>
  </div>

  <div class="mt-2 flex items-center gap-2">
    <div class="w-12 rounded bg-white">
      <Piano size="size-12" />
    </div>
    <div class="w-full">
      <div class="text-lg text-zinc-400">I play a bit of piano.</div>
    </div>
  </div>

  {
    showYouTube && (
      <div class="relative mt-2 flex h-0 pb-[56.25%]">
        <iframe
          class="absolute top-0 left-0 h-full w-full"
          src={`https://www.youtube.com/embed/${youTubeVideoId}`}
          title="Latest piano video"
          loading="lazy"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          referrerpolicy="strict-origin-when-cross-origin"
          allowfullscreen
        />
      </div>
    )
  }

  <div
    id="cat-overlay"
    class="fixed top-0 left-0 z-50 hidden h-screen w-screen items-center justify-center bg-neutral-950/70 transition-all delay-150 duration-500"
  >
    <Image src={oiia} class="h-auto w-auto" alt="OIIA" />
    <audio class="hidden" controls>
      <source src={oiiaOpus} type="audio/ogg; codecs=opus" />
      <source src={oiiaMp3} type="audio/mpeg" />
    </audio>
  </div>
</section>

<script is:inline>
  const catEars = document.querySelector("#cat-ears")

  catEars?.addEventListener("click", () => {
    const catOverlay = document.querySelector("#cat-overlay")
    if (!catOverlay) {
      return
    }

    const [, catOverlayAudio] = catOverlay.children
    catOverlayAudio.play()

    catOverlay.classList.add("flex")
    catOverlay.classList.remove("hidden")

    const CAT_OVERLAY_DURATION = 2500
    globalThis.setTimeout(() => {
      catOverlay.classList.add("hidden")
      catOverlay.classList.remove("flex")
    }, CAT_OVERLAY_DURATION)
  })
</script>
