---
const { href, target, className = "", excludeIcon = false } = Astro.props

const calculatedTarget =
  target ??
  (href?.startsWith("https://") || href?.startsWith("mailto:")
    ? "_blank"
    : "_self")
---

<script>
  // Since gradient is used on hover making the font color transparent, the underline is done
  // using `text-decoration-line` and the color needs to be set dynamically from parent element
  const anchors = document.querySelectorAll("a")
  anchors.forEach((anchor) => {
    const parentElement = anchor.parentElement
    if (!parentElement) return

    anchor.style.textDecorationColor = getComputedStyle(parentElement)["color"]
  })
</script>

<style>
  a[href*="//"][data-include-icon*="true"]:not([href*="krystofs.com"])
  {
    &:after {
      content: "";
      margin-left: 4px;
      padding-left: 1em;
      background-color: currentColor;
      mask-image: url("/src/assets/icons/external.svg");
      mask-size: 3em;
      mask-position: center;
      mask-repeat: no-repeat;
    }
  }
  a[href*="//"]:not([href*="krystofs.com"]):hover
  {
    &:after {
      background-color: #e6805f;
    }
  }
</style>

<a
  data-include-icon={!excludeIcon}
  class=`underline transition duration-0 hover:bg-linear-(--gradient-accent) hover:bg-clip-text hover:text-transparent hover:duration-150 ${className}`
  target={calculatedTarget}
  href={href}><slot /></a
>
